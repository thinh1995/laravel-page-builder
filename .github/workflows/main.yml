name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  psalm-security-scan:
    name: Psalm
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Psalm Security Scan
        uses: docker://ghcr.io/psalm/psalm-security-scan
        
      - name: Import Security Analysis results into GitHub Security Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  check_style_and_test_coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run check style
        run: composer run-script phpcs

      - name: Run tests
        env:
          XDEBUG_MODE: coverage
        run: ./vendor/bin/pest --coverage-clover clover.xml

      - name: Generate test coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.0
        with:
          coverage_badge_path: 'badge-coverage.svg'
          push_badge: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: 'bot: Update code coverage badge'
          
  test_multiple_version_laravel_and_php:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.1, 8.2 ]
        laravel: [ 10.*, 11.*]
        stability: [ prefer-stable ]
        include:
          - laravel: 10.*
            testbench: ^8.0
          - laravel: 11.*
            testbench: ^9.0
        exclude:
          - laravel: 10.*
            php: 8.2
          - laravel: 11.*
            php: 8.1

    name: PHP${{ matrix.php }} - LARAVEL${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: xdebug-beta
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-${{ matrix.dependency-version }}-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Execute tests
        run: ./vendor/bin/pest
  
